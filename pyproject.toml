[project]
name = "gfx"
description = "Single solution project of highly collaborative components"
readme = "README.md"

[tool.ruff]
select = [
  "E",
  "F",
  "W",
  "N",
  "D",
  "UP",
  "YTT",
  "ANN",
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "CPY",
  "C4",
  "C9",
  "DTZ",
  "T10",
  "EM",
  "EXE",
  #"FA", # TODO investigate PEP 563
  "ISC",
  "ICN",
  "G",
  "INP",
  "PIE",
  "T",
  "PYI",
  "PT",
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  "ARG",
  "PTH",
  "TD",
  "FIX",
  "ERA",
  "PL", # TODO 'enable pylint' does not work as expected
  "TRY",
  "FLY",
  "NPY",
  "PERF",
  "RUF",
]

ignore = [
  "D1",     # no global enforcement of docstrings
  "ANN101", # TODO investigate 'self' type annotation
  "D211",   # explicitly ignore default ignored
  "D213",   # explicitly ignore default ignored
  "COM812", # trailing comma managed by black
]

exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

line-length = 88
target-version = "py310"
dummy-variable-rgx = "^_$"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"test_*" = ["S101"] # allow assert in unit tests

[tool.isort]
line_length = 88
profile = "black"

[tool.black]
line_length = 88
target_version = ['py310']

[tool.flake8]
max-line-length = 88

[mypy]
follow_imports = "silent"
show_error_context = true
color_output = true
pretty = true
show_absolute_path = true
disallow_redefinition = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true

[tool.pylint.main]
jobs = 1
good-names = ["i", "j", "k", "x", "y", "z", "s", "t", "u", "a", "b", "c"]

[tool.pylint."messages control"]
disable = [
  "missing-module-docstring",
  "missing-function-docstring",
  "missing-class-docstring",
  "logging-fstring-interpolation",
  "too-few-public-methods",
  "no-value-for-parameter"
]

[tool.pylint.logging]
logging-format-style = "new"
